<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style TargetType="Button" x:Key="ButtonBase">

		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Background" Value="{StaticResource LightCyan}"/>
		<Setter Property="Foreground" Value="{StaticResource Cyan}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>

		<!-- Need this for hover event to work -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">

					<Border Background="{TemplateBinding Background}" 
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource ExtraLightCyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource CyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightCyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource CyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>

	</Style>

	<Style TargetType="Button" x:Key="IconButton" BasedOn="{StaticResource ButtonBase}">
		<Setter Property="Width" Value="24"/>
		<Setter Property="Height" Value="24"/>
		<Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
	</Style>

	<Style TargetType="Button" x:Key="TextButton" BasedOn="{StaticResource ButtonBase}">
		<Setter Property="Width" Value="80"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="Foreground" Value="{StaticResource White}"/>
		<Setter Property="FontFamily" Value="{StaticResource Quicksand}"/>
	</Style>
	
	<Style TargetType="Button" x:Key="SpeakerButton" BasedOn="{StaticResource IconButton}">
		 
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FontSize" Value="17"/>
		<Setter Property="Content" Value="{StaticResource SpeakerIcon}"/>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="Transparent" Duration="0:0:0.0" Storyboard.TargetProperty="Background.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="Transparent" Duration="0:0:0.0" Storyboard.TargetProperty="Background.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>

	</Style>
	
	
	<Style TargetType="Button" x:Key="BrEButton" BasedOn="{StaticResource SpeakerButton}">

		<Setter Property="Foreground" Value="{StaticResource LightBlue}"/>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource BlueColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightBlueColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>

	</Style>

	<Style TargetType="Button" x:Key="NAmEButton" BasedOn="{StaticResource SpeakerButton}">

		<Setter Property="Foreground" Value="{StaticResource LightRed}"/>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource RedColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightRedColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>

	</Style>

	<Style TargetType="Button" x:Key="ArrowButton" BasedOn="{StaticResource IconButton}">

		<Setter Property="Background" Value="{StaticResource LightMagenta}"/>
		<Setter Property="Foreground" Value="{StaticResource ExtraLightMagenta}"/>
		<Setter Property="FontSize" Value="20"/>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource DarkMagentaColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource LightMagentaColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightMagentaColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource ExtraLightMagentaColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
		 
	</Style>

	<Style TargetType="Button" x:Key="NextButton" BasedOn="{StaticResource ArrowButton}">
		<Setter Property="Content" Value="{DynamicResource NextArrowIcon}"/>
	</Style>

	<Style TargetType="Button" x:Key="PrevButton" BasedOn="{StaticResource ArrowButton}">
		<Setter Property="Content" Value="{StaticResource PrevArrowIcon}"/>
	</Style>

	<Style TargetType="Button" x:Key="SearchButton" BasedOn="{StaticResource IconButton}">

		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Background" Value="{StaticResource LightCyan}"/>
		<Setter Property="Foreground" Value="{StaticResource Cyan}"/>
		<Setter Property="Content" Value="{StaticResource SearchIcon}"/>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightYellowColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource DarkYellowColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation To="{StaticResource LightCyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Background.Color" />
						<ColorAnimation To="{StaticResource CyanColor}" Duration="0:0:0.15" Storyboard.TargetProperty="Foreground.Color" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
		 
	</Style>

	<Style TargetType="Button" x:Key="SettingButton" BasedOn="{StaticResource IconButton}">

		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Content" Value="{DynamicResource CogIcon}"/>

	</Style>
	
	<Style TargetType="Button" x:Key="HelpButton" BasedOn="{StaticResource IconButton}">

		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Content" Value="{DynamicResource QuestionIcon}"/>

	</Style>

	<Style TargetType="Button" x:Key="WindowButton">

	  <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
	  <Setter Property="Height" Value="25"/>
	  <Setter Property="Width" Value="25"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
	  <Setter Property="HorizontalAlignment" Value="Right"/>
	  <Setter Property="Content" Value="{DynamicResource CircleIcon}"/>

	</Style>

	<Style TargetType="Button" x:Key="CloseButton" BasedOn="{StaticResource WindowButton}">

		<Setter Property="Foreground" Value="{StaticResource Red}"/>

		<Setter Property="Template">
	    <Setter.Value>
	      <ControlTemplate TargetType="{x:Type Button}">
	        <Border Background="{TemplateBinding Background}">
	          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
	        </Border>
	        <ControlTemplate.Triggers>
	          <Trigger Property="IsEnabled" Value="False">
	            <Setter Property="Foreground" Value="{StaticResource Red}"/>
	          </Trigger>
	          <Trigger Property="IsMouseOver" Value="True">
	            <Setter Property="Foreground" Value="{StaticResource LightRed}"/>
	            <Setter Property="Content" Value="{DynamicResource CloseIcon}"/>
						</Trigger>
	          <Trigger Property="IsPressed" Value="True">
	            <Setter Property="Foreground" Value="{StaticResource Red}"/>
	          </Trigger>
	        </ControlTemplate.Triggers>
	      </ControlTemplate>
	    </Setter.Value>
	  </Setter>

	</Style>

	<Style TargetType="Button" x:Key="MaximizeButton" BasedOn="{StaticResource WindowButton}">

		<Setter Property="Foreground" Value="{StaticResource Green}"/>

		<Setter Property="Template">
	    <Setter.Value>
	      <ControlTemplate TargetType="{x:Type Button}">
	        <Border Background="{TemplateBinding Background}">
	          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
	        </Border>
	        <ControlTemplate.Triggers>
	          <Trigger Property="IsEnabled" Value="False">
	            <Setter Property="Foreground" Value="{StaticResource Green}"/>
	          </Trigger>
	          <Trigger Property="IsMouseOver" Value="True">
	            <Setter Property="Foreground" Value="{StaticResource LightGreen}"/>
	            <Setter Property="Content" Value="{DynamicResource MaximizeIcon}"/>
						</Trigger>
	          <Trigger Property="IsPressed" Value="True">
	            <Setter Property="Foreground" Value="{StaticResource Green}"/>
	          </Trigger>
	        </ControlTemplate.Triggers>
	      </ControlTemplate>
	    </Setter.Value>
	  </Setter>

	</Style>

	<Style TargetType="Button" x:Key="MinimizeButton" BasedOn="{StaticResource WindowButton}">

		<Setter Property="Foreground" Value="{StaticResource Yellow}"/>

		<Setter Property="Template">
	    <Setter.Value>
	      <ControlTemplate TargetType="{x:Type Button}">
	        <Border Background="{TemplateBinding Background}">
	          <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
	        </Border>
	        <ControlTemplate.Triggers>
	          <Trigger Property="IsEnabled" Value="False">
	            <Setter Property="Foreground" Value="{StaticResource Yellow}"/>
	          </Trigger>
	          <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{StaticResource LightYellow}"/>
	            <Setter Property="Content" Value="{DynamicResource MinimizeIcon}"/>
						</Trigger>
	          <Trigger Property="IsPressed" Value="True">
	            <Setter Property="Foreground" Value="{StaticResource Yellow}"/>
	          </Trigger>
	        </ControlTemplate.Triggers>
	      </ControlTemplate>
	    </Setter.Value>
	  </Setter>

	</Style>


</ResourceDictionary>